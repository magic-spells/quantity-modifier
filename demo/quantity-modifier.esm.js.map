{"version":3,"file":"quantity-modifier.esm.js","sources":["../src/quantity-modifier.js"],"sourcesContent":["class QuantityModifier extends HTMLElement {\n  // Static flag to track if styles have been injected\n  static #stylesInjected = false;\n\n  constructor() {\n    super();\n    this.handleDecrement = this.handleDecrement.bind(this);\n    this.handleIncrement = this.handleIncrement.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n\n    // Inject styles once when first component is created\n    QuantityModifier.#injectStyles();\n  }\n\n  /**\n   * Inject global styles for hiding number input spin buttons\n   * Only runs once regardless of how many components exist\n   */\n  static #injectStyles() {\n    if (QuantityModifier.#stylesInjected) return;\n\n    // this will hide the arrow buttons in the number input field\n    const style = document.createElement('style');\n    style.textContent = `\n      /* Hide number input spin buttons for quantity-modifier */\n      quantity-modifier input::-webkit-outer-spin-button,\n      quantity-modifier input::-webkit-inner-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n      }\n      \n      quantity-modifier input[type=\"number\"] {\n        -moz-appearance: textfield;\n      }\n    `;\n\n    document.head.appendChild(style);\n    QuantityModifier.#stylesInjected = true;\n  }\n\n  // Define which attributes trigger attributeChangedCallback when modified\n  static get observedAttributes() {\n    return ['min', 'max', 'value'];\n  }\n\n  // Called when element is added to the DOM\n  connectedCallback() {\n    this.render();\n    this.attachEventListeners();\n  }\n\n  // Called when element is removed from the DOM\n  disconnectedCallback() {\n    this.removeEventListeners();\n  }\n\n  // Called when observed attributes change\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (oldValue !== newValue) {\n      this.updateInput();\n    }\n  }\n\n  // Get minimum value allowed, defaults to 1\n  get min() {\n    return parseInt(this.getAttribute('min')) || 1;\n  }\n\n  // Get maximum value allowed, defaults to 99\n  get max() {\n    return parseInt(this.getAttribute('max')) || 99;\n  }\n\n  // Get current value, defaults to 1\n  get value() {\n    return parseInt(this.getAttribute('value')) || 1;\n  }\n\n  // Set current value by updating the attribute\n  set value(val) {\n    this.setAttribute('value', val);\n  }\n\n  // Render the quantity modifier HTML structure\n  render() {\n    const min = this.min;\n    const max = this.max;\n    const value = this.value;\n\n    // check to see if these fields already exist\n    const existingDecrement = this.querySelector('[data-action-decrement]');\n    const existingIncrement = this.querySelector('[data-action-increment]');\n    const existingInput = this.querySelector('[data-quantity-modifier-field]');\n\n    // if they already exist, just set the values\n    if (existingDecrement && existingIncrement && existingInput) {\n      existingInput.value = value;\n      existingInput.min = min;\n      existingInput.max = max;\n      existingInput.type = 'number';\n    } else {\n      // if they don't exist, inject the template\n      this.innerHTML = `\n        <button data-action-decrement type=\"button\">\n          <svg class=\"svg-decrement\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\">\n            <title>decrement</title>\n            <path fill=\"currentColor\" d=\"M368 224H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h352c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16z\"></path>\n          </svg>\n        </button>\n        <input \n          type=\"number\" \n          inputmode=\"numeric\" \n          pattern=\"[0-9]*\" \n          data-quantity-modifier-field \n          value=\"${value}\" min=\"${min}\" max=\"${max}\">\n        <button data-action-increment type=\"button\">\n          <svg class=\"svg-increment\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\">\n            <title>increment</title>\n            <path fill=\"currentColor\" d=\"M368 224H224V80c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v144H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h144v144c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16V288h144c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16z\"></path>\n          </svg>\n        </button>\n      `;\n    }\n  }\n\n  // Attach click and input event listeners to buttons and input field\n  attachEventListeners() {\n    const decrementBtn = this.querySelector('[data-action-decrement]');\n    const incrementBtn = this.querySelector('[data-action-increment]');\n    const input = this.querySelector('[data-quantity-modifier-field]');\n\n    if (decrementBtn) decrementBtn.addEventListener('click', this.handleDecrement);\n    if (incrementBtn) incrementBtn.addEventListener('click', this.handleIncrement);\n    if (input) input.addEventListener('input', this.handleInputChange);\n  }\n\n  // Remove event listeners to prevent memory leaks\n  removeEventListeners() {\n    const decrementBtn = this.querySelector('[data-action-decrement]');\n    const incrementBtn = this.querySelector('[data-action-increment]');\n    const input = this.querySelector('[data-quantity-modifier-field]');\n\n    if (decrementBtn) decrementBtn.removeEventListener('click', this.handleDecrement);\n    if (incrementBtn) incrementBtn.removeEventListener('click', this.handleIncrement);\n    if (input) input.removeEventListener('input', this.handleInputChange);\n  }\n\n  // Handle decrement button click, respects minimum value\n  handleDecrement() {\n    const currentValue = this.value;\n    const newValue = Math.max(currentValue - 1, this.min);\n    this.updateValue(newValue);\n  }\n\n  // Handle increment button click, respects maximum value\n  handleIncrement() {\n    const currentValue = this.value;\n    const newValue = Math.min(currentValue + 1, this.max);\n    this.updateValue(newValue);\n  }\n\n  // Handle direct input changes, clamps value between min and max\n  handleInputChange(event) {\n    const inputValue = parseInt(event.target.value);\n    if (!isNaN(inputValue)) {\n      const clampedValue = Math.max(this.min, Math.min(inputValue, this.max));\n      this.updateValue(clampedValue);\n    }\n  }\n\n  // Update the component value and dispatch change event if value changed\n  updateValue(newValue) {\n    if (newValue !== this.value) {\n      this.value = newValue;\n      this.updateInput();\n      this.dispatchChangeEvent(newValue);\n    }\n  }\n\n  // Sync the input field with current component state\n  updateInput() {\n    const input = this.querySelector('[data-quantity-modifier-field]');\n    if (input) {\n      input.value = this.value;\n      input.min = this.min;\n      input.max = this.max;\n    }\n  }\n\n  // Dispatch custom event when value changes for external listeners\n  dispatchChangeEvent(value) {\n    this.dispatchEvent(\n      new CustomEvent('quantity-modifier:change', {\n        detail: { value },\n        bubbles: true,\n      })\n    );\n  }\n}\n\ncustomElements.define('quantity-modifier', QuantityModifier);\n\nexport { QuantityModifier };\nexport default QuantityModifier;\n"],"names":[],"mappings":"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"}
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).QuantityModifier={})}(this,function(t){"use strict";class QuantityModifier extends HTMLElement{constructor(){super(),this.handleDecrement=this.handleDecrement.bind(this),this.handleIncrement=this.handleIncrement.bind(this),this.handleInputChange=this.handleInputChange.bind(this)}static get observedAttributes(){return["min","max","value"]}connectedCallback(){this.render(),this.attachEventListeners()}disconnectedCallback(){this.removeEventListeners()}attributeChangedCallback(t,e,n){e!==n&&this.updateInput()}get min(){return parseInt(this.getAttribute("min"))||1}get max(){return parseInt(this.getAttribute("max"))||99}get value(){return parseInt(this.getAttribute("value"))||1}set value(t){this.setAttribute("value",t)}render(){const t=this.min,e=this.max,n=this.value;this.innerHTML=`\n      <div class="quantity-modifier">\n        <button data-action-decrement type="button">\n          <svg class="svg-decrement" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512">\n            <title>decrement</title>\n            <path fill="currentColor" d="M368 224H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h352c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16z"></path>\n          </svg>\n        </button>\n        <input type="number" data-quantity-modifier-field value="${n}" min="${t}" max="${e}">\n        <button data-action-increment type="button">\n          <svg class="svg-increment" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512">\n            <title>increment</title>\n            <path fill="currentColor" d="M368 224H224V80c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v144H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h144v144c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16V288h144c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16z"></path>\n          </svg>\n        </button>\n      </div>\n    `}attachEventListeners(){const t=this.querySelector("[data-action-decrement]"),e=this.querySelector("[data-action-increment]"),n=this.querySelector("[data-quantity-modifier-field]");t&&t.addEventListener("click",this.handleDecrement),e&&e.addEventListener("click",this.handleIncrement),n&&n.addEventListener("input",this.handleInputChange)}removeEventListeners(){const t=this.querySelector("[data-action-decrement]"),e=this.querySelector("[data-action-increment]"),n=this.querySelector("[data-quantity-modifier-field]");t&&t.removeEventListener("click",this.handleDecrement),e&&e.removeEventListener("click",this.handleIncrement),n&&n.removeEventListener("input",this.handleInputChange)}handleDecrement(){const t=this.value,e=Math.max(t-1,this.min);this.updateValue(e)}handleIncrement(){const t=this.value,e=Math.min(t+1,this.max);this.updateValue(e)}handleInputChange(t){const e=parseInt(t.target.value);if(!isNaN(e)){const t=Math.max(this.min,Math.min(e,this.max));this.updateValue(t)}}updateValue(t){t!==this.value&&(this.value=t,this.updateInput(),this.dispatchChangeEvent(t))}updateInput(){const t=this.querySelector("[data-quantity-modifier-field]");t&&(t.value=this.value)}dispatchChangeEvent(t){this.dispatchEvent(new CustomEvent("quantity-modifier:change",{detail:{value:t},bubbles:!0}))}}customElements.define("quantity-modifier",QuantityModifier),t.QuantityModifier=QuantityModifier,t.default=QuantityModifier,Object.defineProperty(t,"__esModule",{value:!0})});
